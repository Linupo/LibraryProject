@model IEnumerable<LibraryProject.Models.Book>
@using LibraryProject.Controllers

@{
    ViewBag.Title = "Knygos";
}

<h2>Knygų sąrašas</h2>

<p>
    @Html.ActionLink("Sukurti naują", "Create")
</p>
<p>
    @Html.ActionLink("Laisvos knygos", "FreeBooks")
</p>

<table class="table table-bordered table-hover table-striped">
    <tr>
        <th>@Html.ActionLink("Pavadinimas", "Index", "Book", new { sortOrder = ViewBag.TitleSortParam }, null)</th>
        <th>@Html.ActionLink("Autorius", "Index", "Book", new { sortOrder = ViewBag.AuthorSortParam }, null)</th>
        <th>@Html.ActionLink("Metai", "Index", "Book", new { sortOrder = ViewBag.YearSortParam }, null)</th>
        <th>@Html.DisplayNameFor(model => model.Genre.Name)</th>
        <th>@Html.DisplayNameFor(model => model.Library.Name)</th>
        <th>@Html.DisplayNameFor(model => model.Publisher.Name)</th>
        <th>@Html.DisplayNameFor(model => model.Language)</th>
        @if (Auth.GetRole() == (int)Auth.Roles.LibraryWorker)
        {
            <th></th>
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr onclick="location.href = '@Url.Action("Details", "Book", new { id = item.BookId })'">
            <td>@Html.DisplayFor(modelItem => item.Title)</td>
            <td>@Html.DisplayFor(modelItem => item.Author.FullName)</td>
            <td>@Html.DisplayFor(modelItem => item.YearWritten)</td>
            <td>@Html.DisplayFor(modelItem => item.Genre.Name)</td>
            <td>@Html.DisplayFor(modelItem => item.Library.Name)</td>
            <td>@Html.DisplayFor(modelItem => item.Publisher.Name)</td>
            <td>@Html.DisplayFor(modelItem => item.Language)</td>
            @if (Auth.GetRole() == (int)Auth.Roles.LibraryWorker)
            {
                <td>@Html.ActionLink("Ištrinti", "Delete", new { id = item.BookId })</td>
            }
        </tr>
    }
</table>
